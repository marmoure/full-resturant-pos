// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

// Role model for user permissions
model Role {
  id        Int      @id @default(autoincrement())
  name      String   @unique // Owner, Server, Cashier, GrillCook, KitchenStaff
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  users     User[]
}

// User model for authentication and role-based access
model User {
  id        Int      @id @default(autoincrement())
  username  String   @unique
  password  String   // Hashed password
  roleId    Int
  role      Role     @relation(fields: [roleId], references: [id])
  isActive  Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  orders    Order[]  // Orders created by this user
}

// Order model for tracking restaurant orders
model Order {
  id          Int      @id @default(autoincrement())
  orderNumber Int      // Daily reset order number
  status      String   // pending, preparing, ready, completed, cancelled
  tableNumber String?  // Optional table number
  totalAmount Float    @default(0)
  createdById Int
  createdBy   User     @relation(fields: [createdById], references: [id])
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  items       OrderItem[]
}

// OrderItem model for individual items in an order
model OrderItem {
  id          Int      @id @default(autoincrement())
  orderId     Int
  order       Order    @relation(fields: [orderId], references: [id], onDelete: Cascade)
  itemName    String
  quantity    Int
  price       Float
  station     String   // grill, kitchen, bar
  status      String   // pending, preparing, ready
  notes       String?  // Special instructions
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}
